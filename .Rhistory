fit.all.constraints<-function(a,b,x)
{
trait_var<-trait.variance(a,b,x)
size<-constraint.size(a,b,x)
intercept<-constraint.intercept(a,b,x)
slope<-constraint.slope(a,b,x)
allometry<-constraint.allometry(a,b,x)
intercept_size<-constraint.intercept_and_size(a,b,x)
slope_size<-constraint.slope_and_size(a,b,x)
summary.out<-as.data.frame(c(trait_var, length(a)))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("Value")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
fit.all.constraints(a,b,x)
fit.all.constraints<-function(a,b,x)
{
trait_var<-trait.variance(a,b,x)
size<-constraint.size(a,b,x)
intercept<-constraint.intercept(a,b,x)
slope<-constraint.slope(a,b,x)
allometry<-constraint.allometry(a,b,x)
intercept_size<-constraint.intercept_and_size(a,b,x)
slope_size<-constraint.slope_and_size(a,b,x)
summary.out<-as.data.frame(c(trait_var, length(a)))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("% trait variance left")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
fit.all.constraints(a,b,x)
summary.out<-as.data.frame(c(trait_var, round(length(a), 0))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("% remaining trait variance")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
round(length(a), 0)
fit.all.constraints<-function(a,b,x)
{
trait_var<-trait.variance(a,b,x)
size<-constraint.size(a,b,x)
intercept<-constraint.intercept(a,b,x)
slope<-constraint.slope(a,b,x)
allometry<-constraint.allometry(a,b,x)
intercept_size<-constraint.intercept_and_size(a,b,x)
slope_size<-constraint.slope_and_size(a,b,x)
summary.out<-as.data.frame(c(trait_var, round(length(a), 0)))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("% remaining trait variance")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
fit.all.constraints(a,b,x)
summary.out<-as.data.frame(c(trait_var, round(length(a), 0)))
summary.out
paleoTS
library(paleoTS)
?paleoTS
paleoTS
as.paleoTS
intercept<-a
slope<-b
x_mean<-x
y_mean<-rnorm(3)
n.intercept <- length(intercept)
n.slope <- length(slope)
n.x_mean <- length(x_mean)
n.y_mean <- length(y_mean)
n.check <- c(n.intercept, n.slope, n.x_mean, n.y_mean)
if (!all(n.check == n.intercept))
stop("mm, vv, nn and tt must be all of the same length")
stop("intercept, slope, x_mean and y_mean must be all of the same length")
x<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
x
allo<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
class(allo)<-"allometry object"
allo
print("The body size vector was centered on its mean, which is an assumption of the downstream statistical procedures in the "allometry" package" ")
}
class(allo)<-"allometry object"
}
print("The body size vector was centered on its mean, which is an assumption of the downstream statistical procedures in the "allometry" package" ")
print("The body size vector was centered on its mean, which is an assumption of the downstream statistical procedures in the allometry package")
as.allometry.object<-function(intercept, slope, x_mean, y_mean){
n.intercept <- length(intercept)
n.slope <- length(slope)
n.x_mean <- length(x_mean)
n.y_mean <- length(y_mean)
n.check <- c(n.intercept, n.slope, n.x_mean, n.y_mean)
if (!all(n.check == n.intercept))
stop("intercept, slope, x_mean and y_mean must be all of the same length")
allo<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
if (round(mean(allo$x_mean),13) != 0)
{
intercept<-y_mean-slope(x_mean-mean(x_mean))
x_mean<-x_mean-mean(x_mean)
print("The body size vector was centered on its mean, which is an assumption in the downstream statistical procedures in the allometry package")
}
class(allo)<-"allometry object"
}
as.allometry.object(intercept, slope, x_mean, y_mean)
?stop
y_mean
y_mean<-rnorm(6)
as.allometry.object(intercept, slope, x_mean, y_mean)
slope
round(mean(x_mean),13) != 0
ound(mean(x_mean),13)
round(mean(x_mean),13)
as.allometry.object<-function(intercept, slope, x_mean, y_mean){
n.intercept <- length(intercept)
n.slope <- length(slope)
n.x_mean <- length(x_mean)
n.y_mean <- length(y_mean)
n.check <- c(n.intercept, n.slope, n.x_mean, n.y_mean)
if (!all(n.check == n.intercept))
stop("intercept, slope, x_mean and y_mean must be all of the same length")
allo<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
if (round(mean(x_mean),13) != 0)
{
allo$intercept<-y_mean-slope*(x_mean-mean(x_mean))
allo$x_mean<-x_mean-mean(x_mean)
print("The body size vector was centered on its mean, which is an assumption in the downstream statistical procedures in the allometry package")
}
class(allo)<-"allometry object"
}
as.allometry.object(intercept, slope, x_mean, y_mean)
as.allometry.object(intercept, slope, x_mean, y_mean)
xxx<-as.allometry.object(intercept, slope, x_mean, y_mean)
xxx
as.paleoTS
as.allometry.object<-function(intercept, slope, x_mean, y_mean){
n.intercept <- length(intercept)
n.slope <- length(slope)
n.x_mean <- length(x_mean)
n.y_mean <- length(y_mean)
n.check <- c(n.intercept, n.slope, n.x_mean, n.y_mean)
if (!all(n.check == n.intercept))
stop("intercept, slope, x_mean and y_mean must be all of the same length")
allo<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
if (round(mean(x_mean),13) != 0)
{
allo$intercept<-y_mean-slope*(x_mean-mean(x_mean))
allo$x_mean<-x_mean-mean(x_mean)
print("The body size vector was centered on its mean, which is an assumption in the downstream statistical procedures in the allometry package")
}
class(allo)<-"allometry object"
return(allo)
}
xxx<-as.allometry.object(intercept, slope, x_mean, y_mean)
xxx
intercept
mean(allo$x_mean)
x_mean-mean(x_mean)
mean(x_mean-mean(x_mean))
x_mean-mean(x_mean)
allo$x_mean
intercept
allo$intercept
as.allometry.object<-function(intercept, slope, x_mean, y_mean){
n.intercept <- length(intercept)
n.slope <- length(slope)
n.x_mean <- length(x_mean)
n.y_mean <- length(y_mean)
n.check <- c(n.intercept, n.slope, n.x_mean, n.y_mean)
if (!all(n.check == n.intercept))
stop("intercept, slope, x_mean and y_mean must be all of the same length")
allo<-list(intercept = intercept, slope = slope, x_mean=x_mean, y_mean = y_mean)
if (round(mean(x_mean),13) != 0) {
allo$intercept<-y_mean-slope*(x_mean-mean(x_mean))
allo$x_mean<-x_mean-mean(x_mean)
print("The body size vector was centered on its mean, which is an assumption in the downstream statistical procedures in the allometry package")
}
class(allo)<-"allometry object"
return(allo)
}
xxx<-as.allometry.object(intercept, slope, x_mean, y_mean)
xxx
intercept
allo$intercept
source('~/.active-rstudio-document')
xxx<-as.allometry.object(intercept, slope, x_mean, y_mean)
xxx
allo$intercept
xxx$intercept
xxx$x_mean
mean(xxx$x_mean)
fit3models()
fit3models
as.paleoTS
xxx
#Variance in a conditioned on x
test_var_a.x<-function (allo)
{
out<-var(allo$intercept)-(cov(allo$intercept,allo$x_mean)^2/var(allo$x_mean))
return(out)
}
test_var_a.x(xxx)
source('~/.active-rstudio-document')
#Variance in a conditioned on x
test_var_a.x<-function (allometry.object)
{
out<-var(allometry.object$intercept)-(cov(allometry.object$intercept,allometry.object$x_mean)^2/var(allometry.object$x_mean))
return(out)
}
test_var_a.x(xxx)
var_a.x<-function (allometry.object)
{
out<-var(allometry.object$intercept)-(cov(allometry.object$intercept,allometry.object$x_mean)^2/var(allometry.object$x_mean))
return(out)
}
var_a.x(xxx)
#Variance in a conditioned on x
var_a.x<-function (allometry.object)
{
out<-var(allometry.object$intercept)-(cov(allometry.object$intercept,allometry.object$x_mean)^2/var(allometry.object$x_mean))
return(out)
}
#Variance in x conditioned on a
var_x.a<-function (allometry.object)
{
out<-var(allometry.object$x_mean)-(cov(allometry.object$intercept,x)^2/var(allometry.object$intercept))
return(out)
}
#Variance in b conditioned on a
var_b.a<-function (allometry.object)
{
out<-var(allometry.object$slope)-(cov(allometry.object$intercept,allometry.object$slope)^2/var(allometry.object$intercept))
return(out)
}
#Variance in a conditioned on b
var_a.b<-function (allometry.object)
{
out<-var(allometry.object$intercept)-(cov(allometry.object$intercept,allometry.object$slope)^2/var(allometry.object$slope))
return(out)
}
#Variance in x conditioned on b
var_x.b<-function (allometry.object)
{
out<-var(allometry.object$x_mean)-(cov(allometry.object$slope,allometry.object$x_mean)^2/var(allometry.object$slope))
return(out)
}
#Covariance between b and x, conditioned on a
cov_b_x.a<-function (allometry.object)
{
out<-cov(allometry.object$slope,allometry.object$x_mean)-(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean))/var(allometry.object$intercept)
return(out)
}
var_a.b(xxx)
var_a.x(xxx)
var_b.a(xxx)
var_x.a(xxx)
var_x.a<-function (allometry.object)
{
out<-var(allometry.object$x_mean)-(cov(allometry.object$intercept,allometry.object$x_mean)^2/var(allometry.object$intercept))
return(out)
}
var_x.a(xxx)
var_x.a<-function (allometry.object)
{
out<-var(allometry.object$x_mean)-(cov(allometry.object$intercept,allometry.object$x_mean)^2/var(allometry.object$intercept))
return(out)
}
var_x.a(xxx)
var_b.a(xxx)
var_a.b(xxx)
var_x.b(xxx)
cov_b_x.a
cov_b_x.a(cov_b_x.a)
cov_b_x.a<-function (allometry.object)
{
out<-cov(allometry.object$slope,allometry.object$x_mean)-(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean))/var(allometry.object$intercept)
return(out)
}
cov_b_x.a(xxx)
constraint.size<-function (allometry.object)
{
out<-var_a.x(allometry.object) + var(allometry.object$slope)*var(allometry.object$x_mean) + cov(allometry.object$slope, allometry.object$x_mean)^2
return(out)
}
constraint.size(xxx)
xxx
constraint.intercept<-function (allometry.object)
{
out<-var_x.a(allometry.object)*mean(allometry.object$slope)^2 + var_b.a(allometry.object) + cov_b_x.a(allometry.object)^2
return(out)
}
constraint.intercept(xxx)
constraint.slope<-function (allometry.object)
{
out<-var_a.b(allometry.object) + var_x.b(allometry.object)*(mean(allometry.object$slope^2)+var(allometry.object$slope))
return(out)
}
constraint.slope(xxx)
constraint.allometry<-function (allometry.object)
{
out<-((mean(allometry.object$slope)^2) + var(allometry.object$slope)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) -
(cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) - (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))/(var(allometry.object$intercept)*var(allometry.object$slope)-cov(allometry.object$intercept,allometry.object$slope)^2)
return(out)
}
constraint.allometry(xxx)
constraint.intercept_and_size<-function (allometry.object)
{
out<-(var(allometry.object$x_mean)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) -
(cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))/(var(allometry.object$intercept)*var(allometry.object$x_mean)-cov(allometry.object$intercept,allometry.object$x_mean)^2)
return(out)
}
constraint.intercept_and_size(xxx)
constraint.slope_and_size<-function (allometry.object)
{
out<-((var(constraint.intercept_and_size)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(constraint.intercept_and_size,allometry.object$slope)*cov(constraint.intercept_and_size,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(constraint.intercept_and_size,allometry.object$slope)^2)*var(allometry.object$x_mean) -
(cov(constraint.intercept_and_size,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(constraint.intercept_and_size))/(var(allometry.object$slope)*var(allometry.object$x_mean)-cov(allometry.object$slope,allometry.object$x_mean)^2)
return(out)
}
b
b<-1
constraint.slope_and_size(xxx)
constraint.slope_and_size<-function (allometry.object)
{
out<-((var(constraint.intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(constraint.intercept,allometry.object$slope)*cov(constraint.intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(constraint.intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) -
(cov(constraint.intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(constraint.intercept))/(var(allometry.object$slope)*var(allometry.object$x_mean)-cov(allometry.object$slope,allometry.object$x_mean)^2)
return(out)
}
constraint.slope_and_size(xxx)
constraint.slope_and_size<-function (allometry.object)
{
out<-((var(llometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(llometry.object$intercept,allometry.object$slope)*cov(llometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(llometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) -
(cov(llometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(llometry.object$intercept))/(var(allometry.object$slope)*var(allometry.object$x_mean)-cov(allometry.object$slope,allometry.object$x_mean)^2)
return(out)
}
constraint.slope_and_size(xxx)
constraint.slope_and_size<-function (allometry.object)
{
out<-((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) -
(cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))/(var(allometry.object$slope)*var(allometry.object$x_mean)-cov(allometry.object$slope,allometry.object$x_mean)^2)
return(out)
}
constraint.slope_and_size(xxx)
trait.variance<-function(allometry.object)
{
out<-var(allometry.object$intercept) + 2*mean(allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean) + (mean(allometry.object$slope^2))*var(allometry.object$x_mean) + var(allometry.object$slope)*var(allometry.object$x_mean) + cov(allometry.object$slope,allometry.object$x_mean)^2
return(out)
}
trait.variance(xxx)
fit.all.constraints<-function(allometry.object)
{
trait_var<-trait.variance(allometry.object)
size<-constraint.size(allometry.object)
intercept<-constraint.intercept(allometry.object)
slope<-constraint.slope(allometry.object)
allometry<-constraint.allometry(allometry.object)
intercept_size<-constraint.intercept_and_size(allometry.object)
slope_size<-constraint.slope_and_size(allometry.object)
summary.out<-as.data.frame(c(trait_var, round(length(a), 0)))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("% remaining trait variance")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
fit.all.constraints(xxx)
a<-0
b<-0
x<-0
var_a.x(xxx)
var_x.a(xxx)
var_b.a(xxx)
var_a.b(xxx)
var_x.b(xxx)
cov_b_x.a(xxx)
constraint.allometry<-function (allometry.object)
{
out<-((mean(allometry.object$slope)^2)
+ var(allometry.object$slope)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean))
+ 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean))
- (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean)
- (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope)
- (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))
/(var(allometry.object$intercept)*var(allometry.object$slope)-cov(allometry.object$intercept,allometry.object$slope)^2)
return(out)
}
constraint.allometry<-function (allometry.object)
{
out<-((mean(allometry.object$slope)^2)
+ var(allometry.object$slope)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean))
+ 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean))
- (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean)
- (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope)
- (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))
/(var(allometry.object$intercept)*var(allometry.object$slope)-cov(allometry.object$intercept,allometry.object$slope)^2)
return(out)
}
constraint.allometry<-function (allometry.object)
{
out<-((mean(allometry.object$slope)^2) + var(allometry.object$slope)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) - (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept)) /(var(allometry.object$intercept)*var(allometry.object$slope)-cov(allometry.object$intercept,allometry.object$slope)^2)
return(out)
}
constraint.allometry(xxx)
constraint.intercept_and_size<-function (allometry.object)
{
out<-(var(allometry.object$x_mean)) * ((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) - (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))/(var(allometry.object$intercept)*var(allometry.object$x_mean)-cov(allometry.object$intercept,allometry.object$x_mean)^2)
return(out)
}
constraint.slope_and_size<-function (allometry.object)
{
out<-((var(allometry.object$intercept)*var(allometry.object$slope)*var(allometry.object$x_mean)) + 2*(cov(allometry.object$intercept,allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean)*cov(allometry.object$slope,allometry.object$x_mean)) - (cov(allometry.object$intercept,allometry.object$slope)^2)*var(allometry.object$x_mean) - (cov(allometry.object$intercept,allometry.object$x_mean)^2)*var(allometry.object$slope) - (cov(allometry.object$slope,allometry.object$x_mean)^2)*var(allometry.object$intercept))/(var(allometry.object$slope)*var(allometry.object$x_mean)-cov(allometry.object$slope,allometry.object$x_mean)^2)
return(out)
}
trait.variance<-function(allometry.object)
{
out<-var(allometry.object$intercept) + 2*mean(allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean) + (mean(allometry.object$slope^2))*var(allometry.object$x_mean) + var(allometry.object$slope)*var(allometry.object$x_mean) + cov(allometry.object$slope,allometry.object$x_mean)^2
return(out)
}
fit.all.constraints<-function(allometry.object)
{
trait_var<-trait.variance(allometry.object)
size<-constraint.size(allometry.object)
intercept<-constraint.intercept(allometry.object)
slope<-constraint.slope(allometry.object)
allometry<-constraint.allometry(allometry.object)
intercept_size<-constraint.intercept_and_size(allometry.object)
slope_size<-constraint.slope_and_size(allometry.object)
summary.out<-as.data.frame(c(trait_var, round(length(a), 0)))
rownames(summary.out)<-(c("Trait variance", "Number of allometries"))
colnames(summary.out)<-("Value")
output<-(as.data.frame(c(size, intercept, slope, allometry, intercept_size, slope_size))/trait_var)*100
rownames(output)<-c("Size", "Intercept", "Slope", "Allometry", "Intercept and size", "Slope and size")
colnames(output)<-("% remaining trait variance")
out<- list("info" = summary.out, "constraints" = output)
return(out)
}
fit.all.constraints(xxx)
trait.variance<-function(allometry.object)
{
out<-var(allometry.object$intercept) + 2*mean(allometry.object$slope)*cov(allometry.object$intercept,allometry.object$x_mean) + (mean(allometry.object$slope^2))*var(allometry.object$x_mean) + var(allometry.object$slope)*var(allometry.object$x_mean) + cov(allometry.object$slope,allometry.object$x_mean)^2
return(out)
}
trait.variance(xxx)
xxx
mean(xxx$x_mean)
as.allometry.object(xxx$intercept, xxx$slope, xxx$x_mean, xxx$y_mean)
yyy<-as.allometry.object(xxx$intercept, xxx$slope, xxx$x_mean, xxx$y_mean)
yyy
intercept
source('~/.active-rstudio-document')
yyy<-as.allometry.object(intercept, slope, x_mean, y_mean)
yyy
fit.all.constraints(yyy)
yyy
source('~/.active-rstudio-document')
yyy<-as.allometry.object(intercept, slope, x_mean, y_mean)
fit.all.constraints(yyy)
source('~/Dropbox/GitHub/allometry/functions_v2.R')
yyy<-as.allometry.object(0, 1, 1, 1)
yyy
yyy<-as.allometry.object(c(1,-1), c(1,1), c(1, 3), c(2,4))
yyy
y_mean
y_mean<-c(2,4)
slope<-c(1,1)
x_mean<-(1,3)
x_mean<-c(1,3)
(x_mean-mean(x_mean))
slope*(x_mean-mean(x_mean))
y_mean
y_mean-slope*(x_mean-mean(x_mean))
setwd("~/Dropbox/GitHub/allometry")
data<-read.table("data.txt", header=T)
data
yyy<-as.allometry.object(data$intercept, data$slope, data$mean_x, data$mean_y
)
yyy
fit.all.constraints(yyy)
var(data$mean_y)
mean(yyy$x_mean
)
setwd("~/Dropbox/GitHub/allometry")
save(data, file = "stalk_eyed_flies.rda")
library("devtools")
library(roxygen2)
devtools::install_github("klutometis/roxygen")
setwd("~/Dropbox/GitHub/allometry")
create("allometry")
devtools::install_github("r-lib/roxygen2")
install.packages("roxygen2")
library(adePEM)
?fit3adequacy.decel
fit4adequacy.stasis
?fit4adequacy.stasis
?as.paleoTS
setwd("~/Dropbox/GitHub/allometry/allometry")
document()
data
stalk_eyed_flies
load("~/Dropbox/GitHub/allometry/allometry/data/stalk_eyed_flies.rda")
data
